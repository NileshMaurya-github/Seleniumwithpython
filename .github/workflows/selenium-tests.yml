name: DemoQA Selenium Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_sections:
        description: 'Test sections to run (comma-separated)'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - elements
          - forms
          - alerts_frames
          - widgets
          - interactions
          - bookstore

jobs:
  selenium-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome, firefox]
        python-version: [3.9, 3.10, 3.11]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb
    
    - name: Setup Chrome
      if: matrix.browser == 'chrome'
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
    
    - name: Setup Firefox
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-firefox@latest
      with:
        firefox-version: latest
    
    - name: Install ChromeDriver
      if: matrix.browser == 'chrome'
      uses: nanasess/setup-chromedriver@v2
    
    - name: Install GeckoDriver
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-geckodriver@latest
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create reports directory
      run: mkdir -p reports/screenshots
    
    - name: Run Selenium Tests - All Sections
      if: github.event.inputs.test_sections == 'all' || github.event.inputs.test_sections == ''
      run: |
        export BROWSER=${{ matrix.browser }}
        export HEADLESS=true
        xvfb-run -a python run_all_tests.py
      continue-on-error: true
    
    - name: Run Selenium Tests - Specific Sections
      if: github.event.inputs.test_sections != 'all' && github.event.inputs.test_sections != ''
      run: |
        export BROWSER=${{ matrix.browser }}
        export HEADLESS=true
        IFS=',' read -ra SECTIONS <<< "${{ github.event.inputs.test_sections }}"
        xvfb-run -a python run_all_tests.py --sections "${SECTIONS[@]}"
      continue-on-error: true
    
    - name: Generate Allure Report
      if: always()
      run: |
        pip install allure-pytest
        allure generate reports/allure-results --clean -o reports/allure-report
      continue-on-error: true
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.browser }}-python${{ matrix.python-version }}
        path: |
          reports/
          *.html
        retention-days: 30
    
    - name: Upload Screenshots
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: screenshots-${{ matrix.browser }}-python${{ matrix.python-version }}
        path: reports/screenshots/
        retention-days: 7
    
    - name: Publish Test Results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: DemoQA Tests (${{ matrix.browser }}, Python ${{ matrix.python-version }})
        path: reports/junit.xml
        reporter: java-junit
        fail-on-error: false

  notify:
    needs: selenium-tests
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify on Success
      if: needs.selenium-tests.result == 'success'
      run: |
        echo "✅ All Selenium tests passed successfully!"
    
    - name: Notify on Failure
      if: needs.selenium-tests.result == 'failure'
      run: |
        echo "❌ Some Selenium tests failed. Check the artifacts for details."